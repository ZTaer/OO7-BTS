
/*********** scss_oo7GoldModl v1.0 目录 *****/
/*
	scss_oo7GoldModl为SCSS轻量级框架,能够更加灵活操作CSS3,你可以把他了解为短小精悍的小钢炮
	作者: __OO7__
	源码链接: https://github.com/ZTaer/OO7_GoldModl/tree/master/WebClass
	如果你有更好的想法可以联系我: QQ - 1069798804 ( 加好友时记得留言scssUser )
	
	0. 防出错类
	1.	flex函数类
		1-0. 开启弹性布局,有兼容性: display-flex( [flex-direction] )
		1-1. 单行flex布局，含兼容性: xy-items( justify-content, align-items, [flex-wrap] );
		1-2. 多行flex布局，含兼容性: xy-content( justify-content, align-items, align-content, [flex-wrap] )
	2. 颜色类
		2-0. 预计开发快捷渐变
	3. 字体类
		3-0. 快捷设置字体格式: font-style( 字体大小, 字体颜色, 字体宽度, 字间距, 字种类，字大小单位 )
	4. 布局类
		4-0. 根据宽度"等比例缩放"大小高度: img-autosize( 图片宽度,图片高度,容器宽度,容器单位 );
		4-1. 设置主要内容区域,留出二边间隔,默认0/1200/1920大小为中间内容: div-content( 上下内间大小,书写主要内容区域大小,占用真实空间大小 );
		4-2. 图片不变形显示,防止在后台因放不同尺寸图片，造成前台因图片尺寸不同造成的布局变形,默认图片位置为center: img-window( 图片宽度,图片高度,图片x方向位置,图片y方向位置 );
	5. 动画类
		5-0. 图片放大/缩小动画过度效果,注意二者函数配合才能实现动画效果( 考虑到灵活性 )img-transition( 动画时间 ); img-transform-scale( 放大倍数 );
	
*/

// 0. 防出错类-BGN
*{
	margin:0;
	padding:0;
	border: 0;
}
// 考虑到兼容性
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
}

article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}

ol,ul,li{
	list-style:none;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
}

a{
	text-decoration:none;
}

// 0. 防出错类-END


// 1. flex函数类-BGN
	// 1-0. 开启弹性布局,有兼容性
	//	用法:
	//		display-flex( [flex-direction] )
	@mixin display-flex( $direction1:row ){
			display:flex;
			display:-webkit-flex;
			
			flex-direction:$direction1;
			-webkit-flex-direction:$direction1;
	}
	
	// 1-1. 单行flex布局，含兼容性
	//	用法:
	//		xy-items( justify-content, align-items, [flex-wrap] );
	@mixin xy-items( $x, $y, $nowrap:nowrap ){
		justify-content:$x;
		-webkit-justify-content:$x;
		
		align-items:$y;
		-webkit-align-items:$y;
		
		flex-wrap:$nowrap;
		-webkit-flex-wrap:$nowrap;
	}
	
	// 1-2. 多行flex布局，含兼容性
	// 用法:
	//		xy_content( justify-content, align-items, align-content, [flex-wrap] )
	@mixin xy-content( $xx, $yy, $wrap:wrap ){
		justify-content:$xx;
		-webkit-justify-content:$xx;
		
		align-content:$yy;
		-webkit-align-content:$yy;
		
		flex-wrap:$wrap;
		-webkit-flex-wrap:$wrap;
		
	}

// 1. flex函数类-END

// 2. 颜色类-BGN

	// 2-0. 快捷设置边框渐变色
	// 用法:
	//		border-linear( )
	@mixin border-linear(  ){

	}

// 2. 颜色类-END

// 3. 字体类-BGN

	// 3-0. 快捷设置字体格式
	// 用法:
	//		font-style( 字体大小, 字体颜色, 字体宽度, 字间距, 字种类, 字大小单位 )
	//		变量名称为语法的缩写,方便调入修改参数
	@mixin font-style( $fs:15, $c:#696969, $fw:"normal",  $ls:3, $ff:"微软雅黑", $unit:"px" ){
		font-size:$fs + unquote($unit);
		color:$c;
		font-weight: unquote($fw);
		letter-spacing: $ls + unquote("px");
		font-family: unquote($ff);
	}

// 3. 字体类-END

// 4. 布局类-BGN
	
	// 4-0. 根据宽度"等比例缩放"大小高度
	//	用法:
	//		img-autosize( 图片宽度,图片高度,容器宽度,容器单位 );
	@mixin img-autosize( $imgW, $imgH, $viewWidth,$viewUnit:vw  ){
		width:$viewWidth + unquote("%");
		height:calc( #{$viewWidth}#{$viewUnit} / #{$imgW} * #{$imgH} );
		display:block;
		background: cover;
	}
	
	// 4-1. 设置主要内容区域,留出二边间隔,默认1200/1920大小为中间内容
	//	用法:
	//		div-content( 上下内间大小,距书写主要内容区域大小,占用真实空间大小 );
	@mixin div-content( $tb_padding:0, $div_w:1200, $screen_w:1920  ){
		$rl_padding:( 100 - ( $div_w / $screen_w ) * 100 ) / 2;
		width:( 100 - $rl_padding * 2 ) + unquote("%") ;
		padding: $tb_padding + unquote("px")  $rl_padding + unquote("%"); // $a + unquote("%") 设置单位( 删除字符串中的引号 )
	}
	
	// 4-2. 图片不变形显示,防止在后台因放不同尺寸图片，造成前台因图片尺寸不同造成的布局变形
	//	用法:
	//		img-window( 图片宽度,图片高度,图片x方向位置,图片y方向位置 );
	@mixin img-window( $img_w, $img_h, $img_x:center, $img_y:center ){
		width: $img_w;
		height: $img_h;
		overflow: hidden;
		@include display-flex();
		@include xy-items( $img_x, $img_y );
	}

// 4. 布局类-END
// 5. 动画类-BGN
	// 5-0. 图片放大/缩小动画过度效果,注意二者函数配合才能实现动画效果( 考虑到灵活性 )
	//	用法:
	//		img-transition( 动画时间 );
	//      img-transform-scale( 放大倍数 );
	//  实例:
	//		img{ @include img-transition( 0.3 ); }
	//		&:hover img{ @include img-transform-scale( 1.1 ); }

	@mixin img-transition( $times ){
		$times: $times + unquote("s");
		transition:all $times linear;
		-moz-transition: all $times linear;
		-webkit-transition: all $times linear;
	}

	@mixin img-transform-scale( $size_num ){
		-webkit-transform: scale($size_num,$size_num);
		-moz-transform: scale($size_num,$size_num);
		transform: scale($size_num,$size_num);
	}

// 5. 动画类-END

